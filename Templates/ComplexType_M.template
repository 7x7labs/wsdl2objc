@implementation %«className»
+ (void)serializeToNode:(xmlNodePtr)node value:(%«variableTypeName»)value {
%IFDEF attributedPrimitive
    if (value)
        xmlNodeSetContent(node, [value._content xmlString]);

%ENDIF
%IFDEF superClass
    xmlNsPtr xsi = xmlSearchNs(node->doc, xmlDocGetRootElement(node->doc), (const xmlChar *)"xsi");
    xmlSetNsProp(node, xsi, (const xmlChar *)"type", (const xmlChar *)"%«prefix»:%«typeName»");

%ENDIF
%IF hasAttributes
    [value addAttributesToNode:node];
%ELSIF hasSuperAttributes
    [value addAttributesToNode:node];
%ENDIF
%IF hasSequenceElements
    [value addElementsToNode:node];
%ELSIF hasSuperElements
    [value addElementsToNode:node];
%ENDIF
}
%IF hasAttributes

- (void)addAttributesToNode:(xmlNodePtr)node {
%IF hasSuperAttributes
    [super addAttributesToNode:node];

%ENDIF
%FOREACH attribute in attributes
    [%«attribute.type.className» serializeToProperty:"%«attribute.wsdlName»" onNode:node value:_%«attribute.name»];
%ENDFOR
}
%ENDIF
%IF hasSequenceElements

- (void)addElementsToNode:(xmlNodePtr)node {
%IF hasSuperElements
    [super addElementsToNode:node];

%ENDIF
%FOREACH element in sequenceElements
    const xmlChar *%«element.name»Name = (const xmlChar *)"%«prefix»:%«element.wsdlName»";
%IF element.isArray
    for (%«element.type.variableTypeName» item in _%«element.name») {
        xmlNodePtr %«element.name»Node = xmlNewChild(node, NULL, %«element.name»Name, NULL);
        [%«element.type.className» serializeToNode:%«element.name»Node value:item];
    }

%ELSE
    if (_%«element.name») {
        xmlNodePtr %«element.name»Node = xmlNewChild(node, NULL, %«element.name»Name, NULL);
        [%«element.type.className» serializeToNode:%«element.name»Node value:_%«element.name»];
    }

%ENDIF
%ENDFOR
}

%FOREACH element in sequenceElements
%IFDEF element.type.factoryClassName
%IFNOT element.isArray

- (%«element.type.variableTypeName»)%«element.name» {
    if (!_%«element.name») _%«element.name» = [%«element.type.factoryClassName» new];
    return _%«element.name»;
}
%ENDIF
%ENDIF
%ENDFOR
%ENDIF
%IF hasAttributes

%FOREACH attribute in attributes
%IFDEF attribute.type.factoryClassName
- (%«attribute.type.variableTypeName»)%«attribute.name» {
    if (!_%«attribute.name») _%«attribute.name» = [%«attribute.type.factoryClassName» new];
    return _%«attribute.name»;
}

%ENDIF
%ENDFOR
%ENDIF
+ (%«variableTypeName»)deserializeNode:(xmlNodePtr)cur {
    %«className» *newObject = [self new];
    
%IFDEF attributedPrimitive
    // Set the string content
    newObject._content = [NSString stringWithXmlString:xmlNodeGetContent(cur) free:YES];
%ENDIF

%IF hasAttributes
    [newObject deserializeAttributesFromNode:cur];
%ELSIF hasSuperAttributes
    [newObject deserializeAttributesFromNode:cur];
%ENDIF
%IF hasSequenceElements
    [newObject deserializeElementsFromNode:cur];
%ELSIF hasSuperElements
    [newObject deserializeElementsFromNode:cur];
%ENDIF

    return newObject;
}
%IF hasAttributes

- (void)deserializeAttributesFromNode:(xmlNodePtr)cur {
%IF hasSuperAttributes
    [super deserializeAttributesFromNode:cur];

%ENDIF
%FOREACH attribute in attributes
    self.%«attribute.name» = [%«attribute.type.className» deserializeAttribute:"%«attribute.wsdlName»" ofNode:cur];
%ENDFOR
}
%ENDIF
%IF hasSequenceElements

- (void)deserializeElementsFromNode:(xmlNodePtr)cur {
%IF hasSuperElements
    [super deserializeElementsFromNode:cur];

%ENDIF
%IF hasArrayElements
%FOREACH element in sequenceElements
%IF element.isArray
    NSMutableArray *%«element.name»Values = nil;
%ENDIF
%ENDFOR

%ENDIF
    for (cur = cur->children; cur; cur = cur->next) {
        if (cur->type != XML_ELEMENT_NODE) continue;

%FOREACH element in sequenceElements
        else if (xmlStrEqual(cur->name, (const xmlChar *)"%«element.wsdlName»")) {
%IF element.isArray
            Class elementClass = classForElement(cur) ?: [%«element.type.className» class];
            if (!%«element.name»Values) %«element.name»Values = [NSMutableArray new];
            [%«element.name»Values addObject:[elementClass deserializeNode:cur]];
%ELSE
%IF element.type.isEnum
            self.%«element.name» = [%«element.type.className» deserializeNodeRaw:cur];
%ELSE
            Class elementClass = classForElement(cur) ?: [%«element.type.className» class];
            self.%«element.name» = [elementClass deserializeNode:cur];
%ENDIF
%ENDIF
        }
%ENDFOR
    }
%IF hasArrayElements

%FOREACH element in sequenceElements
%IF element.isArray
    if (%«element.name»Values) self.%«element.name» = %«element.name»Values;
%ENDIF
%ENDFOR
%ENDIF
}
%ENDIF
@end
